#!/bin/bash
# Railrota Installer

echo "-------------"
echo "Welcome to the Railrota Installer."
echo "-------------"
echo "Checking system environment."
# Check for composer.json file first
COMPOSER_FILE=./composer.json
if [[ ! -f "$COMPOSER_FILE" ]]; then
  echo "Could not find composer.json. Did you clone the Git repository correctly?"
  echo "You can get a fresh one from https://github.com/oliverearl/railrota"
  echo "Cannot continue. Exiting."
  exit 1
fi

# Test to check that PHP is installed.
php -v > /dev/null 2>&1
PHP_IS_INSTALLED=$?

if [[ $PHP_IS_INSTALLED -ne 0 ]]; then
  echo "PHP is not installed. Cannot continue."
  exit 1;
fi

# Test for Composer
composer -v > /dev/null 2>&1
COMPOSER=$?
if [[ $COMPOSER -ne 0 ]]; then
    echo "Composer is not installed. I'll download that for you."
    EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
    if [[ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]]; then
        echo 'Composer signature mismatch. Cannot continue.'
        rm composer-setup.php
        exit 1
    fi
  php composer-setup.php --quiet
  RESULT=$?
  rm composer-setup.php
  if [[ $RESULT -ne 0 ]]; then
      echo 'Something went wrong when attempting to download Composer. Cannot continue.'
      exit 1
  fi
fi
echo "-------------"
echo "Everything looks good to me! Downloading dependencies now."

# Install dependencies
if [[ $COMPOSER -ne 0 ]]; then
  php composer.phar install --optimize-autoloader
else
  composer install --optimize-autoloader
fi

# Perform env changes
ENV_FILE=.env
echo "Done."
echo "-------------"
if [[ -f "$ENV_FILE" ]]; then
  echo "An .env environment file has been found. I won't overwrite it."
  echo "This might have been generated by Composer. If you didn't make it, be sure to fill it in."
else
  cp .env.example .env
  echo "A new .env file has been created for you to fill in."
fi
echo "I will now pause and give you time to fill in the aforementioned .env file if you have not done so already."
echo "Refer to the readme for information on how to configure this file if you're not sure."
read -n 1 -s -r -p "Press any key once you're done."

# Laravel Artisan steps
echo "-------------"
echo "I will now invoke Laravel Artisan to begin installation."
php artisan key:generate
php artisan config:cache
php artisan telescope:install
echo "Done."
echo "-------------"

# Database Migration
echo "It is time to migrate data to your database."
echo "This is a destructive action. You may be prompted whether you wish to proceed."
php artisan migrate:fresh
echo "Done."
echo "-------------"

# Seeding
read -p "I can optionally seed the database with dummy data for you. Do you want me to do this? (y/n)?" choice
if [[ "$choice" =~ ^[Yy]$ ]]; then
  echo "Okay. Seeding database now.";
  php artisan db:seed
else
  echo "Okay. Leaving database blank."
fi
echo "An admin user will be created for you in any case."
php artisan db:seed --class=AdminSeeder
echo "Done."
echo "-------------"

# Mix install
echo "I will now invoke Laravel Mix to compile front-end assets."
node -v > /dev/null 2>&1
NODE_IS_INSTALLED=$?
if [[ $NODE_IS_INSTALLED -ne 0 ]]; then
  echo "Node.js is not installed. Skipping this step."
  echo "You can do this yourself later. Please consult the readme."
else
  # Check for Yarn
  yarn -v > /dev/null 2>&1
  YARN_IS_INSTALLED=$?
  if [[ $YARN_IS_INSTALLED -ne 0 ]]; then
    # Check for NPM
    npm -v > /dev/null 2>&1
    NPM_IS_INSTALLED=$?
    if [[ $NPM_IS_INSTALLED -ne 0 ]]; then
      echo "Both Yarn and NPM are not installed. Skipping this step."
      echo "You can do this yourself later. Please consult the readme."
    else
      npm install
      npm run production
    fi
  else
    yarn install
    yarn run production
  fi
fi
echo "Done."
echo "-------------"

# Redumping autoloader
echo "Redumping autoloader."
# Install dependencies
if [[ $COMPOSER -ne 0 ]]; then
  php composer.phar dump-autoload
else
  composer dump-autoload
fi
echo "Done."
echo "-------------"

# All done
echo "Good news! Installation complete!"
echo "Your admin user login email is jane.doe@railrota.com with a password of 'password'."
echo "Have fun with Railrota!"
exit 0
